gwas[which.min(gwas$P), ]
gwas <- filter(gwas, P < 1e-4)
gwas5 <- filter(gwas, P < 1e-5)
gwas6 <- filter(gwas, P < 1e-6)
gwas7 <- filter(gwas, P < 1e-7)
gwas7
gwas6
gwas6$MAF
gwas = cbind(meta, fit[meta$UID, ])
gwas4 <- filter(gwas, P < 1e-4)
gwas5 <- filter(gwas, P < 1e-5)
gwas6 <- filter(gwas, P < 1e-6)
gwas7 <- filter(gwas, P < 1e-7)
gwas = gwas4
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
length(group)
as.character(unique(group$PEAK))
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
vep_p[vep_p$Consequence == "missense_variant", ]
gwas6 <- filter(gwas, P < 1e-6)
gwas = gwas6
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
gwas = gwas7
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
gwas = gwas4
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
head(gwas)
table(gwas$sign)
1418 / 1603
cor(gwas$MAF, abs(gwas$mean))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
table(gwas$sign)
239 / 246
cor(gwas$MAF, abs(gwas$mean))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e2, labels = cons)
dev.off()
vep_p[vep_p$Consequence == "missense_variant", ]
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e1, labels = cons)
dev.off()
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 5e1, labels = cons)
dev.off()
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 3e1, labels = cons)
dev.off()
gwas = gwas4
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
sum(cons)
vep_p[vep_p$Consequence == "missense_variant", ]
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
head(vep_p)
vep_p$Distance
y = vep_p$Distance
y = y[! y == "-"]
y
cons
sort(cons / sum(cons), decreasing = T)
upstream <- filter(gwasTable, grepl("upstream", Consequence))
unique(upstream$UID)
vep_p[vep_p$UID %in% unique(upstream$UID), ]
y = vep_p[vep_p$UID %in% unique(upstream$UID), ]
y
y$Consequences
y$Consequence
sort(cons / sum(cons), decreasing = T)
sort(cons)
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
unique(missense$UID)
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
intron <- filter(gwasTable, grepl("intron_variant", Consequence))
(intron_gene <- intron$Symbol %>% unique)
source("~/Dropbox/GitHub/X/function.R")
intron_gene_gk <- hsGK(intron_gene)
unique(intron$UID)
nrow(intron)
intron_gene
intron_gene_gk
options(stringsAsFactors = F)
gwascat <- read.delim("~/Dropbox/GitHub/glmm/GWAS_catelog/gwas_catalog_v1.0-downloaded_2015-07-22.tsv")
names(gwascat)
table(gwascat$DISEASE.TRAIT) %>% sort %>% tail
gwas_genes <- gwas$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- gwascat$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, ", ")))
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, " - ")))
gwas_genes <- unlist(gwas_genes) %>% unique
gwas_genes
(x = intersect(intron_genes, gwas_genes))
intron_genes
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwas$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwas[idx, ]
gwas_select = gwascat[idx, ]
idx
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwascat$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwascat[idx, ]
gwas_select
table(gwas_select$CONTEXT)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:20]
head(gwas_select)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
intron_gene
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), ]
x
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("IgG glycosylation", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Type 2 diabetes", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
table(gwas_select$CONTEXT)
cons
sort(cons)
head(gwas)
gwasTable
gwasTable[which.min(gwasTable$P), ]
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
gwas_genes
"LRRC8E" %in% gwas_genes
"NANOS1" %in% gwas_genes
"ZNF684" %in% gwas_genes
"GKN1" %in% gwas_genes
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
15912120 * 4
library(biomaRt)
mart = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
library(affy)
library(oligo)
library(ape)
library(amap)
library(xlsx)
library(genefilter)
library(org.Mm.eg.db)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(preprocessCore)
library(qvalue)
library(dplyr)
library(tidyr)
library(reshape)
library(Biobase)
source("~/Dropbox/GitHub/X/function.R")
setwd("~/Dropbox/GitHub/Il21/Crotty2015")
load("../data/myTpm.rdt")
myTpm[rowMax(as.matrix(myTpm)) > 1e4, ]
myTpm <- myTpm[! rowMax(as.matrix(myTpm)) > 1e4, ]
myTpm <- sweep(myTpm, 2, colSums(myTpm), "/") * 1e6
myTpm <- log2(myTpm + 1)
myTpm <- myTpm[rowMax(as.matrix(myTpm)) > 5, ]
group <- gsub("[12]", "", names(myTpm))
aov.pval <- apply(myTpm, 1, function (x) summary(aov(x ~ group))[[1]][["group", "Pr(>F)"]])
myTpm <- myTpm[aov.pval < 0.05, ]
myTpm_mean <- data.frame(NN = rowMeans(myTpm[1:2]), NP = rowMeans(myTpm[3:4]), PP = rowMeans(myTpm[5:6]))
colSums(myTpm_mean)
file <- "GSE67334_TFH.Vs.TH1.DESeq_Analysis_DE_Genes.txt"
three <- read.table(file, header = T, row.names = 1, sep = "\t")
three_expr <- three[grep("Rep", names(three))] # read count
three_expr <- sweep(three_expr, 2, colSums(three_expr), "/") * 1e7
three_mean <- three[grep("^Mean", names(three))]
names(three_mean) <- gsub("Mean.", "", names(three_mean))
txdb <- keepStandardChromosomes(TxDb.Mmusculus.UCSC.mm10.knownGene)
entrez = AnnotationDbi::select(org.Mm.eg.db, rownames(three), columns=c("ENTREZID"), keytype="SYMBOL")
nrow(entrez[is.na(entrez$ENTREZID), ])
entrez.keep = entrez$ENTREZID[! is.na(entrez$ENTREZID)]
tx <- transcriptsBy(txdb, "gene")
tx <- tx[names(tx) %in% entrez.keep]
tx.len <- mean(width(tx)) # caveat
names(tx.len) <- entrez$SYMBOL[match(names(tx.len), entrez$ENTREZID)]
three_expr <- three_expr[names(tx.len), ]
three_expr <- sweep(three_expr, 1, tx.len, "/")
three_expr <- sweep(three_expr, 2, colSums(three_expr), "/") * 1e6
three_expr <- log2(three_expr + 1)
three_mean <- three_mean[names(tx.len), ]
three_mean <- sweep(three_mean, 1, tx.len, "/")
three_mean <- sweep(three_mean, 2, colSums(three_mean), "/") * 1e6
three_mean <- log2(three_mean + 1)
data <- inner_join(add_rownames(myTpm, "gene"), add_rownames(three_expr, "gene"))
data <- data.frame(row.names = data$gene, data[-1])
colSums(data)
names(data) <- gsub("^T.*\\.", "", names(data))
dt.ctr <- data - rowMeans(data)
dt.svd <- svd(dt.ctr) # SVD
barplot(dt.svd$v[, 1]) # PC1
dt2 <- t(apply(dt.ctr, 1, function (x) {lm(x ~ dt.svd$v[, 1])$res}))
dt3 <- dt2 + rowMeans(data)
hc1 <- hcluster(t(dt3), method = "pearson", link = "average")
plot(as.phylo(hc1), edge.width = 2, font = 2, label.offset = 3e-4)
head(three)
head(three_expr)
head(data)
data <- inner_join(add_rownames(myTpm, "gene"), add_rownames(three_expr, "gene"))
head(data)
data <- data.frame(row.names = data$gene, data[-1])
head(data)
names(data) <- gsub("^T.*\\.", "", names(data))
head(data)
rm(list = ls())
setwd("~/Dropbox/GitHub/Il21/Crotty2015")
cel.files <- read.celfiles(list.celfiles("GSE21380_CEL/", full.name = T))
eight <- exprs(rma(cel.files))
file <- "Mouse430_2.na35.annot.csv.gz"
mouse430 <- read.table(file, header = T, comment.char = "#", sep = ",", stringsAsFactors = F)
mouse430 <- mouse430[c("Probe.Set.ID", "Gene.Symbol")]
mouse430$Gene.Symbol <- gsub(" .*", "", mouse430$Gene.Symbol)
eight <- eight[mouse430$Probe.Set.ID, ]
eight <- apply(eight, 2, function(x) tapply(x, mouse430$Gene.Symbol, max))
colnames(eight) <- c("NonTFH_Rep1", "NonTFH_Rep2", "TFH_Rep1", "TFH_Rep2", "GCTFH_Rep1", "GCTFH_Rep2", "Naive_CD4_T")
eight <- eight[-1, ] %>% as.data.frame
head(eight)
eight = cbind(NAME = rownames(eight), DESCRIPTION = "na", eight)
head(eight)
write(eight, file = "../gsea/eight.txt")
?write
getwd()
str(eight)
eight$NAME = as.character(eight$NAME)
eight$DESCRIPTION = as.character(eight$DESCRIPTION)
write(eight, file = "../gsea/eight.txt")
str(eight)
write(as.matrix(eight), file = "../gsea/eight.txt")
head(eight)
rownames(eight) = NULL
write(as.matrix(eight), file = "../gsea/eight.txt")
write(as.matrix(eight), file = "../gsea/eight.txt", sep = "\t")
write(eight, file = "../gsea/eight.txt", sep = "\t")
head(eight)
write(eight, file = "../gsea/eight.txt", sep = "\t", header = T)
write(as.matrix(eight), file = "../gsea/eight.txt", sep = "\t", header = T)
write.csv(as.matrix(eight), file = "../gsea/eight.txt", sep = "\t", header = T)
write.csv(as.matrix(eight), file = "../gsea/eight.txt", sep = "\t")
write.csv(as.matrix(eight), file = "../gsea/eight.txt", sep = "\t", quote = F)
write.csv(as.matrix(eight), file = "../gsea/eight.txt", quote = F)
write.csv(eight, file = "../gsea/eight.txt", quote = F)
?write.csv
write.txt(eight, file = "../gsea/eight.txt", quote = F)
write.table(eight, file = "../gsea/eight.txt", quote = F)
write.table(eight, file = "../gsea/eight.txt", quote = F, sep = "\t")
write.table(eight, file = "../gsea/eight.txt", quote = F, sep = "\t", row.names = F)
file <- "GSE67334_TFH.Vs.TH1.DESeq_Analysis_DE_Genes.txt"
three <- read.table(file, header = T, row.names = 1, sep = "\t")
three_expr <- three[grep("Rep", names(three))] # read count
three_expr <- sweep(three_expr, 2, colSums(three_expr), "/") * 1e7
head(three)
head(three_expr)
file <- "GSE67334_TFH.Vs.TH1.DESeq_Analysis_DE_Genes.txt"
three <- read.table(file, header = T, row.names = 1, sep = "\t")
three <- three[grep("Rep", names(three))] # read count
three <- sweep(three, 2, colSums(three), "/") * 1e7
head(three)
three = cbind(NAME = rownames(three), DESCRIPTION = "na", three)
rownames(eight) = NULL
head(three)
rownames(three) = NULL
head(three)
write.table(three, file = "../gsea/three.txt", quote = F, sep = "\t", row.names = F)
names(three) <- gsub("^T.*\\.", "", names(three))
head(three)
write.table(three, file = "../gsea/three.txt", quote = F, sep = "\t", row.names = F)
head(three)
txdb <- keepStandardChromosomes(TxDb.Mmusculus.UCSC.mm10.knownGene)
entrez = AnnotationDbi::select(org.Mm.eg.db, rownames(three), columns=c("ENTREZID"), keytype="SYMBOL")
file <- "GSE67334_TFH.Vs.TH1.DESeq_Analysis_DE_Genes.txt"
three <- read.table(file, header = T, row.names = 1, sep = "\t")
three <- three[grep("Rep", names(three))] # read count
three <- sweep(three, 2, colSums(three), "/") * 1e7
txdb <- keepStandardChromosomes(TxDb.Mmusculus.UCSC.mm10.knownGene)
entrez = AnnotationDbi::select(org.Mm.eg.db, rownames(three), columns=c("ENTREZID"), keytype="SYMBOL")
nrow(entrez[is.na(entrez$ENTREZID), ])
entrez.keep = entrez$ENTREZID[! is.na(entrez$ENTREZID)]
tx <- transcriptsBy(txdb, "gene")
tx <- tx[names(tx) %in% entrez.keep]
tx.len <- mean(width(tx)) # caveat
names(tx.len) <- entrez$SYMBOL[match(names(tx.len), entrez$ENTREZID)]
three <- three[names(tx.len), ]
three <- sweep(threeg, 1, tx.len, "/")
three <- sweep(three, 1, tx.len, "/")
three <- sweep(three, 2, colSums(three), "/") * 1e6
three <- log2(three + 1)
head(three)
three = cbind(NAME = rownames(three), DESCRIPTION = "na", three)
rownames(three) = NULL
names(three) <- gsub("^T.*\\.", "", names(three))
write.table(three, file = "../gsea/three.txt", quote = F, sep = "\t", row.names = F)
head(three)
